/*
 * Copyright (c) 2011-2020 HERE Global B.V. and its affiliate(s).
 * All rights reserved.
 * The use of this software is conditional upon having a separate agreement
 * with a HERE company for the use or utilization of this software. In the
 * absence of such agreement, the use of the software is not allowed.
 */

#import <Foundation/Foundation.h>

#import "NMAPositionDataSource.h"



/**
 * A position data source which generates updates from a GPS data log file.
 *
 * The input source of the position updates is specified using the logFile property.
 * The update frequency can be controlled using the updateStyle and updateInterval
 * properties.
 *
 * @note By default this class generates position updates in the background. See the
 * runsInBackground property.
 */
@interface NMALoggedPositionSource : NSObject<NMAPositionDataSource>

/**
 * Initialize an NMALoggedPositionSource instance.
 */
- (nonnull instancetype)init NS_DESIGNATED_INITIALIZER;

/**
 * Initialize a logged position source with the specified log file as input.
 */
- (nonnull instancetype)initWithLogFile:(nonnull NSURL *)logFile;

/**
 * The URL of the log file from which position updates are being generated.
 *
 * Attempts to change the log file after plyabck has started will be ignored. Playback is started
 * when an NMALoggedPositionSource instance is set as the dataSource of NMAPositioningManager.
 *
 * @note Currently, only the GPX file format is supported. GPX files may be generated using
 * NMAPositioningManager and NMADevicePositionSource
 */
@property (nonatomic, nullable) NSURL *logFile;

/**
 * The array of NMAGeoPositions loaded from the current logFile, or nil if no file is set.
 *
 * @note These objects are not exactly the same as objects returned by currentPosition as
 * the currentPosition may have a different timestamp depending upon the values of
 * usesOriginalTimestamps and updateStyle
 */
@property (nonatomic, readonly, nullable) NSArray<NMAGeoPosition *> *positions;

/**
 * The index of the current position within positions
 */
@property (nonatomic, readonly) NSUInteger currentPositionIndex;

/**
 * Indicates whether or not the simulated positions are moving through the log.
 *
 * If stationary is YES, the currentPosition will remain fixed at the last calculated
 * position, or the beginning of the log file if no progress has been made.
 *
 * @note The default value is NO.
 */
@property (nonatomic) BOOL stationary;

/**
 * Indicates whether the position source returns valid positions.
 *
 * Setting positionLost to YES can be used to simulate position loss. Position updates
 * will still be generated by the position source, but the currentPosition property
 * will always return nil.
 *
 * @note Progress through the log will continue regardless of the value of this property.
 *
 * @note The default value is NO.
 */
@property (nonatomic) BOOL positionLost;

/**
 * Indicates whether the position source has reached the end of its log file.
 *
 * @note Returns NO if the source has not yet been started.
 */
@property (nonatomic, readonly) BOOL finished;

/**
 * Erases all progress through the log.
 *
 * @note This method will not affect any properties, including the current log file.
 */
- (void)reset;

@end
